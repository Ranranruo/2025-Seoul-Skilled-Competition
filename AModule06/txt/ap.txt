const StringToInt = (value) => {
        if(typeof value == "string") value = parseInt(value.replaceAll(",", ""));
        return value;
    }
    const products = () => {
        const $$products = document.querySelectorAll(".products");
        const state = new Proxy({
        }, {
            set(obj, prop, value) {
                obj[prop] = value;
                render();
            }
        })
        const render = async () => {
            let data = await fetch("./product.json").then(data => data.json());
            let html = '';
            $$products.forEach(el => {
                let filteredData = data.filter(data => data.category == el.dataset.type)
                filteredData = filteredData.toSorted((a, b) => (b.sale != null) - (a.sale != null));
                el.innerHTML = filteredData.reduce((acc, data) => {
                    return acc + getHtml(data);
                }, '');
            })
        }

        const setEvent = () => {

        }
        const getHtml = (data) => {
            return `
            <div class="bx2 b10 oh" style="width: 250px;">
                <div class="bi df as je g10" style="background-image: url('${data.img}'); aspect-ratio: 1/.7; border-end-start-radius: 70px; padding: 10px;">
                <div class="f10 bs cm b5 btn1 bx2">${data.category}</div>
                ${data.sale != null ? `<div class="f10 bs cm b5 btn1 bx2">SALE</div>` : ''}
                </div>
                <div class="df fc g10" style="padding: 15px;">
                    <div class="w df fc"><p class="s b f18">${data.name}</p><p class="s cg f14">${data.description}</p></div>
                    ${getPrice(data.price, data.sale)}
                    <div class="df jsb"><button class="hd bm cw1 btn1 b5 f14">구매하기</button><button class="hd cb bw3 btn1 b5 f14">장바구니담기</button></div>
                </div>
            </div>
            `;
        }
        const getPrice = (price, sale) => {
            let intP = StringToInt(price);
            if(sale == null) return `<div class="price df g5 b cm"><div class="origin">${intP.toLocaleString()}</div></div>`;
            return `<div class="price df g5 b cm"><div class="origin">${intP.toLocaleString()}</div><div class="sale">${(sale == 10000 ? intP - 10000 : intP - (intP * sale)).toLocaleString()}</div></div>`;
        }
        render();
    }
    products();